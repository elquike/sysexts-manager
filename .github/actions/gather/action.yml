name: "Gather versions for sysexts"
description: "Publish a release that references all available versions for each sysext"
inputs:
  sysexts:
    description: "The list of sysexts to generate releases for"
    required: true

# This composite action needs the following environment variables to be set at
# the workflow or job level:
# - RELEASEURL: Mandatory, needed to fetch older releases

runs:
  using: "composite"
  steps:
    - name: "Publish release"
      env:
        GH_TOKEN: ${{ github.token }}
        SYSEXTS: ${{ inputs.sysexts }}
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
      shell: bash
      run: |
        set -euxo pipefail

        gh release list --limit 100 --json tagName > releases.json

        for sysext in $(echo ${SYSEXTS} | tr ';' ' '); do
          rm -f ./SHA256SUMS*

          releases=(
            $(
              cat releases.json \
                | jq --arg SYSEXT "${sysext}" --raw-output '
                  map(
                    select(
                      (.tagName | startswith($SYSEXT))
                      and
                      (.tagName != $SYSEXT)
                    )
                  )
                  | .[].tagName
                ' \
                | sort -h
            )
          )
          echo "Looking at releases: ${releases[@]}"
          for rel in ${releases[@]}; do
            echo "Fetching SHA256SUMS for release: ${rel}"
            curl --location --fail --output "SHA256SUMS.${rel}" "${RELEASEURL}/${rel}/SHA256SUMS" || touch "SHA256SUMS.${rel}"
            echo "Fetching sysext for release: ${rel}"
            curl --location --fail --output "${rel}.raw" "${RELEASEURL}/${rel}/${rel}.raw" || rm "SHA256SUMS.${rel}"
          done
          ls ./SHA256SUMS.* | sort -h | xargs cat > SHA256SUMS
          new="$(cat SHA256SUMS | sha256sum)"

          old=""
          echo "Fetching SHA256SUMS from release: ${sysext}"
          curl --location --fail --output SHA256SUMS.old "${RELEASEURL}/${sysext}/SHA256SUMS" || touch SHA256SUMS.old
          old="$(cat SHA256SUMS.old | sha256sum)"

          if [[ "${new}" == "${old}" ]]; then
            echo "No changes for ${sysext} since last release. Skipping."
          else
            echo "Creating new release: ${sysext}"

            {
            echo "Versions available:"
            echo "\`\`\`"
            cat ./SHA256SUMS
            echo "\`\`\`"
            } > notes

            gh release delete \
              --cleanup-tag \
              --yes \
              "${sysext}" \
              || true

            gh release create \
              --title "${sysext} systemd system extensions for Fedora" \
              --notes-file notes \
              "${sysext}" \
              --latest=false \
              ./SHA256SUMS ./*.raw
          fi
        done

        rm -f ./SHA256SUMS* ./*.raw

        for sysext in $(echo ${SYSEXTS} | tr ';' ' '); do
            curl --location --fail --output "SHA256SUMS.${sysext}" "${RELEASEURL}/${sysext}/SHA256SUMS" || touch "SHA256SUMS.${sysext}"
        done
        ls ./SHA256SUMS.* | sort -h | xargs cat > SHA256SUMS

        {
        echo "Versions available:"
        echo "\`\`\`"
        cat ./SHA256SUMS
        echo "\`\`\`"
        } > notes

        gh release delete \
          --cleanup-tag \
          --yes \
          latest \
          || true

        gh release create \
          --title "systemd system extensions for Fedora" \
          --notes-file notes \
          latest \
          --latest=true \
          ./SHA256SUMS
