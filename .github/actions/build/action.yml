# SPDX-FileCopyrightText: Timoth√©e Ravier <tim@siosm.fr>
# SPDX-License-Identifier: CC0-1.0

name: "Build and publish a sysext"
description: "Build and publish a systemd system extension under a versioned release"
inputs:
  sysext:
    description: "The sysext to build"
    required: true
  image:
    description: "The image to use as a base for the sysext"
    required: true

# This composite action needs the following environment variables to be set at
# the workflow or job level:
# - RELEASEURL: Mandatory, needed to fetch older releases

runs:
  using: "composite"
  steps:
    - name: "Build sysext if needed"
      env:
        SYSEXT: ${{ inputs.sysext }}
        IMAGE: ${{ inputs.image }}
        PR: ${{ github.event_name == 'pull_request' }}
      shell: bash
      run: |
        set -euxo pipefail

        cd "${SYSEXT}"
        just build ${IMAGE}

    - name: "Publish sysext"
      env:
        SYSEXT: ${{ inputs.sysext }}
        GH_TOKEN: ${{ github.token }}
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
      shell: bash
      run: |
        set -euxo pipefail

        git config --global --add safe.directory "${PWD}"

        cd "${SYSEXT}"

        VERSION="$(cat ./version)"
        VERSION_ID="$(cat ./version_id)"
        if [[ "$(uname -m)" == "x86_64" ]]; then
            ARCH="x86-64"
        elif [[ "$(uname -m)" == "aarch64" ]]; then
            ARCH="arm64"
        else
            echo "Unsupported architecture"
            exit 1
        fi
        TAGNAME="${SYSEXT}-${VERSION}-${VERSION_ID}-${ARCH}"

        echo "Creating new release for: ${TAGNAME}"

        sha256sum *.raw > SHA256SUMS

        {
        echo "Release:"
        echo "\`\`\`"
        cat ./SHA256SUMS
        echo "\`\`\`"
        echo ""
        echo "Built using container image:"
        echo "\`\`\`"
        cat ./digest
        echo "\`\`\`"
        echo ""
        echo "Built using input files:"
        echo "\`\`\`"
        cat ./inputs
        echo "\`\`\`"
        echo ""
        echo "Built using scripts:"
        echo "\`\`\`"
        cat ./scripts
        echo "\`\`\`"
        } > notes

        gh release delete \
          --cleanup-tag \
          --yes \
          "${TAGNAME}" \
          || true

        gh release create \
          --title "${SYSEXT} ${VERSION} for Fedora ${VERSION_ID} (${ARCH})" \
          --notes-file notes \
          "${TAGNAME}" \
          --latest=false \
          ./*.raw ./SHA256SUMS ./inputs ./scripts ./digest
